{
  "swagger": "2.0",
  "info": {
    "description": "You can use this API to access all our API endpoints, such as: -Price -Strategy -Managed Listings -Batch status",
    "version": "1.0.0",
    "title": "Appeagle API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "price",
      "description": "Retrieve or change the pricing information of your listings."
    },
    {
      "name": "strategyMappings",
      "description": "Returns which listings are mapped to which strategy. You can also use it to change a listingâ€™s strategy."
    },
    {
      "name": "managedListings",
      "description": "Returns which of your listings are managed or not."
    },
    {
      "name": "batchStatuses",
      "description": "Determine the status of a batch processing request."
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/price": {
      "post": {
        "tags": [
          "price"
        ],
        "summary": "update prices for listings in a marketplace",
        "description": "",
        "operationId": "addPet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "marketplaceID",
            "description": "ID of marketplace you want to change listing prices for",
            "required": true
          },
          {
            "in": "body",
            "name": "sku",
            "description": "SKU of item you want to change the price of",
            "required": true
          },
          {
            "in": "body",
            "name": "userID",
            "description": "Your Appeagle user ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/price"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "price"
        ],
        "summary": "Update a price for a specific listing",
        "description": "",
        "operationId": "updatePet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/price"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "marketplaceID not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/price/marketplaceID/int}/{sku}": {
      "get": {
        "tags": [
          "price"
        ],
        "summary": "Retrieve pricing information for a specific listing",
        "description": "To get pricing information for a specific listing, you need the marketplaceID and the SKU",
        "operationId": "findPetsByStatus",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "available",
                "pending",
                "sold"
              ],
              "default": "available"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/price"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/strategyMappings/{marketplaceID:int}": {
      "get": {
        "tags": [
          "strategyMappings"
        ],
        "summary": "Returns which listings are mapped to which strategy.",
        "operationId": "getInventory",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/strategyMappings/{marketplaceID:int2}": {
      "post": {
        "tags": [
          "strategyMappings"
        ],
        "summary": "Update strategies for multiple listings",
        "description": "",
        "operationId": "placeOrder",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": null,
            "required": true,
            "schema": {
              "$ref": "#/definitions/strategyMappings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/strategyMappings"
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "managedListings"
        ],
        "summary": "returns which of your listings are managed or not.",
        "description": null,
        "operationId": "createUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/managedListings"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/batchstatus/{batchID:guid}": {
      "get": {
        "tags": [
          "batchStatuses"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "batchID GUID",
            "in": "query",
            "description": "ID for the batch you want to check the process of",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#definitions/batchStatuses"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Processing": {
                "type": "string",
                "format": "int32",
                "description": "the batch request is currently processing"
              },
              "Succeeded": {
                "type": "string",
                "format": "date-time",
                "description": "the batch request has finished processing"
              },
              "Failed": {
                "type": "string",
                "format": "date-time",
                "description": "there was an error processing this batch request"
              }
            }
          },
          "400": {
            "description": "Invalid batchID GUID"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "strategyMappings": {
      "type": "object",
      "properties": {
        "SKU": {
          "type": "integer",
          "format": "int64"
        },
        "strategyId": {
          "type": "integer",
          "format": "int64"
        },
        "marketplaceID": {
          "type": "integer",
          "format": "int32"
        },
        "listingType": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "Amazon MFN",
            "Amazon FBA"
          ]
        }
      },
      "xml": {
        "name": "strategy"
      }
    },
    "managedListings": {
      "type": "object",
      "properties": {
        "SKU": {
          "type": "integer",
          "format": "int64"
        },
        "marketplaceID": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        },
        "systemManaged": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "batchStatuses": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "xml": {
        "name": "batch status"
      }
    },
    "price": {
      "type": "object",
      "required": [
        "marketplaceid",
        "sku"
      ],
      "properties": {
        "marketplaceid": {
          "type": "integer",
          "format": "int64",
          "example": 10020
        },
        "sku": {
          "type": "integer",
          "format": "int64",
          "example": "EU-L9FK-6II9"
        },
        "userID": {
          "type": "integer",
          "format": "int64",
          "example": 8208
        },
        "MinPrice": {
          "type": "integer",
          "format": "int64",
          "example": 2.45
        },
        "MaxPrice": {
          "type": "integer",
          "format": "int64",
          "example": 2.88
        },
        "CurrentPrice": {
          "type": "integer",
          "format": "int64",
          "example": 2.77
        },
        "CurrentShipping": {
          "type": "integer",
          "format": "int64",
          "example": 5.02
        },
        "MapPrice": {
          "type": "integer",
          "format": "int64",
          "example": 0.02
        },
        "Cost": {
          "type": "integer",
          "format": "int64",
          "example": 7.01
        },
        "CostCurrency": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      },
      "xml": {
        "name": "Price"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}